apiVersion: v1
data:
  urls.yaml: |-  
    urls:
      baidu: "https://www.baidu.com"
      test: 'https://www.baidu.com'
      error_page: 'https://www.baidu.com/sdasdaqgqeg'
kind: ConfigMap
metadata:
  name: web-metrics
#  namespace: prometheus

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: web-metrics
  name: web-metrics
#  namespace: prometheus
spec:
  minReadySeconds: 5
  progressDeadlineSeconds: 600
  revisionHistoryLimit: 10
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  selector:
    matchLabels:
      app: web-metrics
  replicas: 1
  template:
    metadata:
      labels:
        app: web-metrics
    spec:
      containers:
      - env:
        - name: TZ
          value: 'Asia/Shanghai'
        - name: WM_PORT
          value: '5000'
        - name: WM_ENV
          value: 'prod'
        - name: WM_PATH
          value: '/metrics'
        - name: WM_THREADING_NUM
          value: '10'
#        - name: NAMESPACE
#          valueFrom:
#            fieldRef:
#              fieldPath: metadata.namespace
        - name: NAMESPACE
          value: 'local'
#        - name: EX_LABELS
#          value: '{label1="v1",label2="v2"}'
        name: web-metrics
        image: registry.cn-shanghai.aliyuncs.com/baiyuani/web_metrics:1.0.6
        imagePullPolicy: IfNotPresent
        resources:
          requests: 
            cpu: 100m
            memory: 128Mi
          limits: 
            cpu: 500m
            memory: 512Mi
        livenessProbe:
          failureThreshold: 2
          initialDelaySeconds: 10
          periodSeconds: 60
          successThreshold: 1
          httpGet:
            path: /live
            port: 5000
            scheme: HTTP
          timeoutSeconds: 30
        readinessProbe:
          failureThreshold: 2
          initialDelaySeconds: 10
          periodSeconds: 60
          successThreshold: 1
          httpGet:
            path: /ready
            port: 5000
            scheme: HTTP
          timeoutSeconds: 30
        startupProbe:
          failureThreshold: 5
          initialDelaySeconds: 10
          periodSeconds: 5
          successThreshold: 1
          httpGet:
            path: /start
            port: 5000
            scheme: HTTP
          timeoutSeconds: 3
        volumeMounts:
        - name: web-metrics
          mountPath: /web_metrics/urls.yaml
          subPath: urls.yaml
        ports:
        - containerPort: 5000
          protocol: TCP
      volumes:
        - configMap:
            name: web-metrics
          name: web-metrics
#      imagePullSecrets:
#        - name: docker-registry
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 60
      dnsPolicy: ClusterFirst

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: web-metrics
  name: web-metrics
#  namespace: prometheus
spec:
  ports:
  - protocol: TCP
    port: 5000
    targetPort: 5000
  selector:
    app: web-metrics
  sessionAffinity: None
  type: ClusterIP
